{
  "version": 3,
  "sources": ["../keystone.ts", "../env.ts", "../models/User/User.ts", "../models/User/User.hooks.ts", "../utils/generalAccess/access.ts", "../models/schema.ts", "../auth/auth.ts"],
  "sourcesContent": ["import \"./env\";\nimport lists from \"./models/schema\";\nimport { config } from \"@keystone-6/core\";\nimport { withAuth, session } from \"./auth/auth\";\nimport { KeystoneContext } from \"@keystone-6/core/types\";\nimport { Role } from \"./models/Role/constants\";\n\nexport default withAuth(\n  config({\n    db: {\n      provider: \"postgresql\",\n      url: `postgres://${process.env.POSTGRES_USER}:${process.env.POSTGRES_PASSWORD}@${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.POSTGRES_DB}?connect_timeout=300`,\n    },\n    server: {\n      cors: true,\n      maxFileSize: 200 * 1024 * 1024,\n      healthCheck: true,\n    },\n    storage: {\n      my_local_images: {\n        kind: \"local\",\n        type: \"image\",\n        generateUrl: (path) =>\n          `http://${process.env.DB_HOST}:3000/images${path}`,\n        serverRoute: {\n          path: \"/images\",\n        },\n        storagePath: \"public/images\",\n      },\n    },\n\n    lists,\n    session,\n  })\n);\n", "// Setup environment variables\nconst path = require(\"path\");\nconst dotenv = require(\"dotenv\");\n\ndotenv.config({ path: path.resolve(process.cwd(), \"config\", \".env.dev\") });\n", "import { graphql, list } from \"@keystone-6/core\";\nimport {\n  text,\n  password,\n  relationship,\n  timestamp,\n  checkbox,\n  select,\n  virtual,\n  calendarDay,\n  file,\n  image,\n} from \"@keystone-6/core/fields\";\nimport { emailHooks, phoneHooks } from \"./User.hooks\";\nimport access from \"../../utils/generalAccess/access\";\n\nexport default list({\n  access,\n  fields: {\n    name: text({ validation: { isRequired: true } }),\n    lastName: text(),\n    username: text({\n      isIndexed: \"unique\",\n    }),\n    email: text({\n      isIndexed: \"unique\",\n      hooks: emailHooks,\n    }),\n    password: password({\n      validation: { isRequired: true },\n      ui: {\n        createView: {\n          fieldMode: \"hidden\",\n        },\n      },\n    }),\n    phone: text({\n      hooks: phoneHooks,\n    }),\n    role: select({\n      type: \"enum\",\n      validation: {\n        isRequired: true,\n      },\n      defaultValue: \"admin\",\n      options: [\n        { label: \"Admnistrador\", value: \"admin\" },\n        { label: \"User\", value: \"user\" },\n      ],\n    }),\n    profileImage: image({ storage: \"my_local_images\" }),\n    birthday: calendarDay(),\n    age: virtual({\n      field: graphql.field({\n        type: graphql.String,\n        async resolve(item: any) {\n          if (item?.birthday) {\n            const today = new Date();\n            const birthDate = new Date(item.birthday);\n            let age = today.getFullYear() - birthDate.getFullYear();\n            const m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n              age -= 1;\n            }\n            return age.toString();\n          }\n          return \"\";\n        },\n      }),\n    }),\n    createdAt: timestamp({\n      defaultValue: {\n        kind: \"now\",\n      },\n    }),\n  },\n});\n", "export const phoneHooks = {\n  validateInput: async ({ resolvedData, addValidationError }: any) => {\n    const { phone } = resolvedData;\n    if (phone) {\n      // Phone vaidation just numbers and more than 10 digits\n      const pattern = /\\+?\\d{10,}(?:-?\\d+)*$/;\n      if (!pattern.test(phone) || (phone.length < 10 && phone.length !== 0)) {\n        addValidationError(\n          \"El tel\u00E9fono debe ser de 10 d\u00EDgitos y puros n\u00FAmeros\"\n        );\n      }\n    }\n    return phone;\n  },\n};\n\nexport const emailHooks = {\n  validateInput: async ({ resolvedData, addValidationError }: any) => {\n    const { email } = resolvedData;\n\n    if (email && email !== \"\") {\n      // if email comes, verifies regex\n      const pattern =\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (!pattern.test(email)) {\n        addValidationError(\"El formato del correo es incorrecto\");\n      }\n    }\n    return email;\n  },\n};\n", "import { BaseListTypeInfo, ListAccessControl } from \"@keystone-6/core/types\";\n\nconst access: ListAccessControl<BaseListTypeInfo> = {\n  operation: {\n    query: () => true,\n    create: () => true,\n    update: () => true,\n    delete: () => true,\n  },\n  filter: {\n    query: () => true,\n    update: () => true,\n    delete: () => true,\n  },\n};\n\nexport default access;\n", "import User from \"./User/User\";\n\nexport default {\n  User,\n};\n", "// Welcome to some authentication for Keystone\n//\n// This is using @keystone-6/auth to add the following\n// - A sign-in page for your Admin UI\n// - A cookie-based stateless session strategy\n//    - Using a User email as the identifier\n//    - 30 day cookie expiration\n//\n// This file does not configure what Users can do, and the default for this starter\n// project is to allow anyone - logged-in or not - to do anything.\n//\n// If you want to prevent random people on the internet from accessing your data,\n// you can find out how by reading https://keystonejs.com/docs/guides/auth-and-access-control\n//\n// If you want to learn more about how our out-of-the-box authentication works, please\n// read https://keystonejs.com/docs/apis/auth#authentication-api\n\nimport { randomBytes } from \"crypto\";\nimport { createAuth } from \"@keystone-6/auth\";\n\n// see https://keystonejs.com/docs/apis/session for the session docs\nimport { statelessSessions } from \"@keystone-6/core/session\";\n\n// for a stateless session, a SESSION_SECRET should always be provided\n//   especially in production (statelessSessions will throw if SESSION_SECRET is undefined)\nlet sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret && process.env.NODE_ENV !== \"production\") {\n  sessionSecret = randomBytes(32).toString(\"hex\");\n}\n\n// withAuth is a function we can use to wrap our base configuration\nconst { withAuth } = createAuth({\n  listKey: \"User\",\n  identityField: \"email\",\n\n  // this is a GraphQL query fragment for fetching what data will be attached to a context.session\n  //   this can be helpful for when you are writing your access control functions\n  //   you can find out more at https://keystonejs.com/docs/guides/auth-and-access-control\n  sessionData: \"name createdAt\",\n  secretField: \"password\",\n\n  // WARNING: remove initFirstItem functionality in production\n  //   see https://keystonejs.com/docs/config/auth#init-first-item for more\n  initFirstItem: {\n    // if there are no items in the database, by configuring this field\n    //   you are asking the Keystone AdminUI to create a new user\n    //   providing inputs for these fields\n    fields: [\"name\", \"email\", \"password\", \"role\"],\n\n    // it uses context.sudo() to do this, which bypasses any access control you might have\n    //   you shouldn't use this in production\n  },\n});\n\n// statelessSessions uses cookies for session tracking\n//   these cookies have an expiry, in seconds\n//   we use an expiry of 30 days for this starter\nconst sessionMaxAge = 60 * 60 * 24 * 30;\n\n// you can find out more at https://keystonejs.com/docs/apis/session#session-api\nconst session = statelessSessions({\n  maxAge: sessionMaxAge,\n  secret: sessionSecret!,\n});\n\nexport { withAuth, session };\n"],
  "mappings": "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",
  "names": ["import_core", "path"]
}
